apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sdenyallgateway
spec:
  crd:
    spec:
      names:
        kind: K8sDenyAllGateway
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sdenyallgateway

        operations = {"CREATE", "UPDATE"}

        identical(obj, review) {
          obj.metadata.namespace == review.object.metadata.namespace
          obj.metadata.name == review.object.metadata.name
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "Gateway"
          operations[input.review.operation]
          re_match("^(networking.istio.io)$", input.review.kind.group)

          hosts := input.review.object.spec.servers[_].hosts
          other := data.inventory.namespace[ns][apiversion]["Gateway"][resourcename]
          otherhosts := other.spec.servers[_].hosts

          hosts[_] == otherhosts[_]

          not identical(other, input.review)
          msg := sprintf("Duplicate Gateway host: %v", [[input.review.uid, ns, resourcename, hosts, otherhosts]])
        }
